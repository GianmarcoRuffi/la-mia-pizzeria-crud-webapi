@{
    ViewData["Title"] = "Home";
    Layout = "_GuestLayout";
}

<body>

    <main>
<div class="p-5 mb-4 bg-light rounded-3">
      <div class="container-fluid py-2">
        <h1 class=" fw-bold"><a asp-area="" asp-controller="Pizza" asp-action="Index">Aggiungi o modifica una pizza</a></h1>
               @* display-5*@
        <p class="col-md-8 fs-4">Oppure ricerca tra quelle esistenti</p>
                <img class="col-md-3" src="~/images/istockphoto-638790274-612x612.jpg" />
      </div>
    </div>

        @*searchbar*@
        <div>
            <h1>Ricerca pizza per nome:</h1>
            <input id="user_search" type="text" class="js_search form-control py-3" />
            <!-- input id="user_search" type="text" class="js_search form-control" onkeyup="OnUserInput(this)" /> -->
        </div>

    <div class="row js_no_pizzas text-center d-none">
    <div class="col-12">
        <h3>Non sono state trovate pizze.</h3>
    </div>
</div>
<div class="row js_pizzas_table d-none">
    <!-- qui verranno mostrati gli elementi -->
</div>
</main>


</body>





<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.20.0/axios.min.js"></script>



@section Scripts {

<script type="text/javascript">

    // funzione enter
    document.querySelector(".js_search").addEventListener('keyup', OnUserInputEvent);
    var timeoutId = null;
    function OnUserInputEvent(e) {
        let query = e.target.value;
        if (timeoutId != null)
            clearTimeout(timeoutId);
        timeoutId = setTimeout(() => {
            axios.get('/api/pizza/search', {
                params: {
                    name: query
                }
            }).then(response => {
                RenderPizza(response.data);
            }).catch(error => {
                console.log(error);
            })
        }, 300);
    }

    //chiamata axios e funzione
    axios.get('/api/pizza/get').then(res => {
        RenderPizza(res.data);
    }).catch(error => {
        debugger;
        console.log(error);
    })


    // funzione per renderizzare le cards

    function RenderPizza(data) {
        if (data.length == 0) {
            document.querySelector('.js_no_pizzas').classList.remove('d-none');
            document.querySelector('.js_pizzas_table').classList.add('d-none');
        } else {
            document.querySelector('.js_pizzas_table').classList.remove('d-none');
            document.querySelector('.js_no_pizzas').classList.add('d-none');
            document.querySelector('.js_pizzas_table').innerHTML = '';
            data.forEach(pizza => {
                console.log('pizza', pizza);
                document.querySelector('.js_pizzas_table').innerHTML +=
                    `
                                                      <div class="col-12 col-md-4 p-2">
                                                        <div class="card pizza h-100">
                                                          <img src="${pizza.image}" class="card-img-top" alt="...">
                                                          <div class="card-body">
                                                            <h5 class="card-title">${pizza.name}</h5>
                                                            <p class="card-text">${pizza.description}</p>
                                                            <p>${pizza.category.name}</p>
                                                                <p>${pizza.prezzo} €</p>
                                                            <div><a  class="btn btn-primary" href="/Guest/Dettaglio/${pizza.id}">Dettaglio</a></div>
                                                           </div>
                                                        </div>
                                                    </div>
                                                    `;
            });
        }
    }

</script>}